"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[342],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>u});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),d=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=d(r),u=n,b=p["".concat(s,".").concat(u)]||p[u]||c[u]||i;return r?a.createElement(b,l(l({ref:t},m),{},{components:r})):a.createElement(b,l({ref:t},m))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var d=2;d<i;d++)l[d]=r[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},3803:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=r(83117),n=(r(67294),r(3905));const i={sidebar_position:37,title:"Telemetry",slug:"/generated/metamodel/entities/telemetry",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/telemetry.md"},l="Telemetry",o={unversionedId:"docs/generated/metamodel/entities/telemetry",id:"docs/generated/metamodel/entities/telemetry",title:"Telemetry",description:"Aspects",source:"@site/genDocs/docs/generated/metamodel/entities/telemetry.md",sourceDirName:"docs/generated/metamodel/entities",slug:"/generated/metamodel/entities/telemetry",permalink:"/datahubSitePreview/docs/generated/metamodel/entities/telemetry",draft:!1,editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/telemetry.md",tags:[],version:"current",sidebarPosition:37,frontMatter:{sidebar_position:37,title:"Telemetry",slug:"/generated/metamodel/entities/telemetry",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/generated/metamodel/entities/telemetry.md"},sidebar:"overviewSidebar",previous:{title:"DataPlatformInstance",permalink:"/datahubSitePreview/docs/generated/metamodel/entities/dataplatforminstance"},next:{title:"DataHubAccessToken",permalink:"/datahubSitePreview/docs/generated/metamodel/entities/datahubaccesstoken"}},s={},d=[{value:"Aspects",id:"aspects",level:2},{value:"telemetryClientId",id:"telemetryclientid",level:3},{value:"Relationships",id:"relationships",level:2},{value:"Global Metadata Model",id:"global-metadata-model",level:2}],m={toc:d};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"telemetry"},"Telemetry"),(0,n.kt)("h2",{id:"aspects"},"Aspects"),(0,n.kt)("h3",{id:"telemetryclientid"},"telemetryClientId"),(0,n.kt)("p",null,"A simple wrapper around a String to persist the client ID for telemetry in DataHub's backend DB"),(0,n.kt)("details",null,(0,n.kt)("summary",null,"Schema"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "type": "record",\n  "Aspect": {\n    "name": "telemetryClientId"\n  },\n  "name": "TelemetryClientId",\n  "namespace": "com.linkedin.telemetry",\n  "fields": [\n    {\n      "type": "string",\n      "name": "clientId",\n      "doc": "A string representing the telemetry client ID"\n    }\n  ],\n  "doc": "A simple wrapper around a String to persist the client ID for telemetry in DataHub\'s backend DB"\n}\n'))),(0,n.kt)("h2",{id:"relationships"},"Relationships"),(0,n.kt)("h2",{id:"global-metadata-model"},(0,n.kt)("a",{parentName:"h2",href:"https://github.com/datahub-project/datahub/raw/master/docs/imgs/datahub-metadata-model.png"},"Global Metadata Model")),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://github.com/datahub-project/datahub/raw/master/docs/imgs/datahub-metadata-model.png",alt:"Global Graph"})))}c.isMDXComponent=!0}}]);